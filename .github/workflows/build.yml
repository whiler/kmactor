name: build and release

on: workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2019, macos-11]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up requirements for Linux
      if: ${{ matrix.os == 'ubuntu-22.04' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update -qq -y || true
        sudo apt-get install -qq -y gcc gcc-aarch64-linux-gnu xorg-dev
        sudo dpkg --add-architecture arm64
        sudo cp /etc/apt/sources.list /etc/apt/sources.list.d/ports.list
        sudo sed -i -e 's/^deb /deb [arch=arm64] /' -e 's/\/ubuntu/\/ubuntu-ports/' -e 's/archive/ports/' /etc/apt/sources.list.d/ports.list
        sudo apt-get update -qq -y || true
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'
    - name: Build for Windows
      if: ${{ matrix.os == 'windows-2019' }}
      run: |
        Invoke-WebRequest -Uri https://github.com/mstorsjo/llvm-mingw/releases/download/20230320/llvm-mingw-20230320-msvcrt-x86_64.zip -OutFile llvm-mingw-20230320-msvcrt-x86_64.zip
        unzip -q llvm-mingw-20230320-msvcrt-x86_64.zip
        $curdir = Get-Location
        $env:PATH = "$curdir\llvm-mingw-20230320-msvcrt-x86_64\bin;"+"$env:PATH"
        go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo@v1.4.0
        go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@v1.4.0
        make tidy
        make all
    - name: Build for macOS
      if: ${{ matrix.os == 'macos-11' }}
      run: |
        make tidy
        make all
        make macapp
    - name: Build for Linux
      if: ${{ matrix.os == 'ubuntu-22.04' }}
      run: |
        make tidy
        sudo apt-get install -qq -y libc6-dev:amd64 libx11-dev:amd64 libxtst-dev:amd64 libgtk-3-dev:amd64 libayatana-appindicator3-dev:amd64
        make amd64
        sudo apt-get install -qq -y libc6-dev:arm64 libx11-dev:arm64 libxtst-dev:arm64 libgtk-3-dev:arm64 libayatana-appindicator3-dev:arm64
        export PKG_CONFIG_PATH=$(dirname $(find / -type f -name 'ayatana-appindicator3-*.pc' | head -1))
        make arm64
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: bin/kmactor*

  release:
    runs-on: ubuntu-22.04
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: ./
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: kmactor-*
